import { code as telegrafCodeFormat } from 'telegraf/format';

export const startCommand = async (ctx: any): Promise<void> => {
	ctx.session.messages = [];

	await ctx.reply(`üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!

    ü§ñ –Ø –±–æ—Ç –∏ —É–º–µ—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. 

    üé§ –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–∏–º–≤–æ–ª –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ —Ä—è–¥–æ–º —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º –ø–æ–ª–µ–º.

    üí¨ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –±–µ—Å–µ–¥—É, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /new.

    üë©‚Äçüíª –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ!`);
};

export const newContext = async (ctx: any): Promise<void> => {
	ctx.session.messages = [];

	await ctx.reply(telegrafCodeFormat('–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–±—Ä–æ—à–µ–Ω'));
};
